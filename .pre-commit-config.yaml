# Modern pre-commit configuration
# Complete formatting and linting pipeline matching project standards

default_language_version:
  python: python3.13

repos:
  # General file checks (run first to catch basic issues)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        name: Remove trailing whitespace
      - id: end-of-file-fixer
        name: Ensure single newline at end of files
      - id: check-yaml
        name: Validate YAML files
      - id: check-toml
        name: Validate TOML files
      - id: check-json
        name: Validate JSON files
      - id: check-added-large-files
        name: Check for large files
        args: [--maxkb=500]
      - id: check-merge-conflict
        name: Check for merge conflict markers
      - id: debug-statements
        name: Check for debug statements
      - id: mixed-line-ending
        name: Fix mixed line endings
        args: [--fix=lf]

  # Ruff - Fast Python linter and formatter (matches make commands)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.12
    hooks:
      # Run the formatter first (matches `make format`)
      - id: ruff-format
        name: Ruff Format (Python Code Formatting)

      # Then run the linter with auto-fix (matches `make format`)
      - id: ruff
        name: Ruff Lint (Python Code Quality)
        args: [--fix, --exit-non-zero-on-fix]

  # MyPy - Static type checker (matches `make typecheck`)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        name: MyPy Type Checking (Static Analysis)
        args: [--config-file=pyproject.toml, src/, config/]
        pass_filenames: false  # Run on all files for consistency
        language: system  # Use the project's virtual environment with existing deps
